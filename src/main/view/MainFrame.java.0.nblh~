/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainFrame.java
 *
 * Created on 12 21, 11, 6:26:00 PM
 */
package main.view;

import java.awt.CardLayout;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Insets;
import java.awt.event.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.net.URL;
import java.nio.channels.FileChannel;
import java.nio.channels.FileLock;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import javax.imageio.ImageIO;
import javax.swing.*;
import javax.swing.border.Border;

/**
 *
 * @author Aaron
 */
public final class MainFrame extends javax.swing.JFrame {

    private CardLayout cardLayout = new CardLayout();
    private ViewPanel view = null;
    private AddPanel add = null;
    public static final Font arial12 = new Font("arial", Font.PLAIN, 12);
    public static final Font arial14 = new Font("arial", Font.PLAIN, 14);
    private static String foreignLanguage = "Hokkien";
       
    private static File lockFile = null;
    private static FileChannel channel = null;
    private static FileLock lock = null;   
           
    private ArrayList<String> suggestions = new ArrayList<String>();
    
    /**
     Sets up the background image, Layout, and actionListeners.  
     */        
    public MainFrame() 
    {   
        lockApplication();
        
        setIconImage( new ImageIcon(getClass().getResource("/images/icon.png")).getImage() );

        initComponents();
        setSize(855,535);
        
        view = new ViewPanel(); 
        add = new AddPanel();
              
        
        mainPanel.setLayout(cardLayout); 
        mainPanel.add(add, "Add");
        mainPanel.add(view, "View");
        searchTextField.setVisible(false);    
        suggestListScrollPane.setVisible(false); 
        
        addListeners();

        backupButton.addActionListener(new BackupListener()); 
        hButton.setEnabled(false); 
   
        setLocationRelativeTo(null);
    }
   
    
    private void languageButtonAction(JButton selectedButton, ActionEvent e, JButton... unselectedButton)
    {     
        selectedButton.setEnabled(false); 
        
        for(JButton button: unselectedButton)
            button.setEnabled(true);
        
        add.setLanguageLabel(e.getActionCommand());
        view.changeSecondColumnHeaderName(e.getActionCommand());

        foreignLanguage = e.getActionCommand(); 

        view.refreshTable();
    }
    
    /**
     Returns the selected language.
     
     @return a String.
     */
    public static String getforeignLanguage()
    {
        return foreignLanguage;
    }
    
    /**
     Initializes all GUI. Generated by NetBeans.      
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        addButton = new javax.swing.JButton();
        viewButton = new javax.swing.JButton();
        jButton = new javax.swing.JButton();
        hButton = new javax.swing.JButton();
        mButton = new javax.swing.JButton();
        try
        {
            URL url = MainFrame.class.getResource("/images/search_icon.png");
            final BufferedImage searchIcon = ImageIO.read(url);
            Border border = UIManager.getBorder("TextField.border");
            final int x0 = border.getBorderInsets(new JTextField()).left;
            searchTextField = new javax.swing.JTextField()
            {
                protected void paintComponent(Graphics g)
                {
                    super.paintComponent(g);
                    int y = (getHeight() - searchIcon.getHeight())/2;
                    g.drawImage(searchIcon, x0, y, this);
                }
            };
            suggestListScrollPane = new javax.swing.JScrollPane();
            suggestionList = new javax.swing.JList();
            backupButton = new javax.swing.JButton();
            jSeparator1 = new javax.swing.JSeparator();
            mainPanel = new javax.swing.JPanel();
            background = new javax.swing.JLabel();

            setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
            setTitle("Vocabulary");
            setResizable(false);

            addButton.setFont(arial14);
            addButton.setText("Add");
            addButton.setBounds(40, 40, 110, 60);
            jLayeredPane1.add(addButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

            viewButton.setFont(arial14);
            viewButton.setText("View");
            viewButton.setBounds(40, 140, 110, 60);
            jLayeredPane1.add(viewButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

            jButton.setFont(arial12);
            jButton.setText("J");
            jButton.setActionCommand("Japanese");
            jButton.setBounds(10, 240, 50, 40);
            jLayeredPane1.add(jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

            hButton.setFont(arial12);
            hButton.setText("H");
            hButton.setActionCommand("Hokkien");
            hButton.setBounds(70, 240, 50, 40);
            jLayeredPane1.add(hButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

            mButton.setFont(arial12);
            mButton.setText("M");
            mButton.setActionCommand("Mandarin");
            mButton.setBounds(130, 240, 50, 40);
            jLayeredPane1.add(mButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

            searchTextField.setMargin(new Insets(0, x0 + searchIcon.getWidth(), 0, 0));
        }catch(IOException e){}
        searchTextField.setFont(arial12);
        searchTextField.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchTextFieldCaretUpdate(evt);
            }
        });
        searchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchTextFieldKeyPressed(evt);
            }
        });
        searchTextField.setBounds(10, 310, 170, 20);
        jLayeredPane1.add(searchTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);

        suggestionList.setFont(arial12);
        suggestionList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "adasdasdasd", "asdasdasd" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        suggestionList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        suggestListScrollPane.setViewportView(suggestionList);

        suggestListScrollPane.setBounds(10, 330, 170, 130);
        jLayeredPane1.add(suggestListScrollPane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        backupButton.setFont(arial12);
        backupButton.setText("Create Backup");
        backupButton.setBounds(30, 360, 130, 23);
        jLayeredPane1.add(backupButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setBounds(200, 0, 10, 510);
        jLayeredPane1.add(jSeparator1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        mainPanel.setOpaque(false);

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 650, Short.MAX_VALUE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 510, Short.MAX_VALUE)
        );

        mainPanel.setBounds(200, 0, 650, 510);
        jLayeredPane1.add(mainPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/background.png"))); // NOI18N
        background.setBounds(0, 0, 850, 510);
        jLayeredPane1.add(background, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 851, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     Action event for search textfield. Highlights the vocabulary that matches the searched text. Gives out suggestions.
     
     @param evt textfield event
     */
    private void searchTextFieldCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchTextFieldCaretUpdate
        
        String col1[] = null, col2[] = null;
        String w1 = null, w2 = null, w3 = null, w4 = null;
        
        int numOfRows = view.getVocabularyTable().getRowCount();
        String searchedWord = searchTextField.getText().toLowerCase();
        suggestions.clear();

        suggestListScrollPane.setVisible(true); 
        
        for(int i=0; i<numOfRows; i++)
        {
            if(searchedWord.equals("")) 
                break;
            
            col1 = view.getVocabularyTable().getValueAt(i, 0).toString().split("/");
            col2 = view.getVocabularyTable().getValueAt(i, 1).toString().split("/");

            w1 = col1[0];
            
            if(col1.length > 1)
                w2 = col1[1];
            else
                w2 = "";
            
            w3 = col2[0];
            
            if(col2.length > 1)
                w4 = col2[1];
            else
                w4 = "";
            
            if( w1.startsWith(searchedWord) )
            {        
                view.getVocabularyTable().changeSelection(i, 0, false, false);
                
                suggestions.add(w1); 
            }
            else if( w3.startsWith(searchedWord) )
            {        
                view.getVocabularyTable().changeSelection(i, 0, false, false);
                
                suggestions.add(w3); 
            }
            

            // get all startswith string then store to array
            // input array to jlist
            // show jlist
        }    
    }//GEN-LAST:event_searchTextFieldCaretUpdate

     /**
     Action event for search textfield. Moves selected word in suggest list.
     
     @param evt textfield event
     */
    private void searchTextFieldKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_searchTextFieldKeyPressed
    {//GEN-HEADEREND:event_searchTextFieldKeyPressed
        
        int keycode = evt.getKeyCode();
        int selectedIndex = suggestionList.getSelectedIndex();
        
        if( keycode == KeyEvent.VK_UP )
        {                     
            if( selectedIndex > -1 ) // there is a selected word in the list.
            {
                if( selectedIndex  == 0 ) //if at the beginning of the list, move back to end.  
                    suggestionList.setSelectedIndex(suggestionList.getModel().getSize() - 1);               
                else
                    suggestionList.setSelectedIndex(selectedIndex - 1);             
            }
            else
                suggestionList.setSelectedIndex(suggestionList.getModel().getSize() - 1);     
        }
        else if( keycode == KeyEvent.VK_DOWN )
        {
            if( selectedIndex > -1 ) // there is a selected word in the list.
            {
                if( selectedIndex  == suggestionList.getModel().getSize() - 1 ) //if at the end of the list, move back to first.
                    suggestionList.setSelectedIndex(0); 
                else
                    suggestionList.setSelectedIndex(selectedIndex + 1); 
            }
            else
                suggestionList.setSelectedIndex(0);
        }
        
        searchTextField.setText( suggestionList.getSelectedValue().toString() );  
    }//GEN-LAST:event_searchTextFieldKeyPressed

    /**
      Ensures that only one application can run at a time. Uses FileLock technique.  
     */
    private static void lockApplication()
    {
        try
        {           
            lockFile = new File("vocabulary");

            channel = new RandomAccessFile(lockFile, "rw").getChannel();
            lock = channel.tryLock();   

            if(lock == null)
            {  
                JOptionPane.showMessageDialog(null, "Vocabulary is already running.", "Message", JOptionPane.INFORMATION_MESSAGE);
                System.exit(0);
            }
        }
        catch (IOException ex)
        {
            System.out.println(ex);
        }
        
    }
    
    // adds event listener to mainFrame's buttons, suggest_list and window.
    private void addListeners()
    {   
        addButton.addActionListener(new ActionListener()    
                                    {
                                        @Override
                                        public void actionPerformed(ActionEvent e)
                                        {
                                            cardLayout.show(mainPanel, "Add");
                                            searchTextField.setVisible(false); 
                                            
                                            suggestListScrollPane.setVisible(false); 
                                        }
                                    });
        
        viewButton.addActionListener(new ActionListener()    
                                    {
                                        @Override
                                        public void actionPerformed(ActionEvent e)
                                        {
                                            cardLayout.show(mainPanel, "View");
                                            searchTextField.setVisible(true); 
                                            
                                            view.refreshTable();
                                        }
                                    });
        
        addWindowListener(new WindowAdapter()
                            {
                                @Override
                                public void windowClosing(WindowEvent e)
                                {                                              
                                    try
                                    {
                                        lock.release();
                                        channel.close();
                                        lockFile.delete();
                                        System.exit(0);
                                    }
                                    catch (IOException ex)
                                    {
                                        System.out.println(ex);
                                    }
                                }                            
                            });
        
        
        jButton.addActionListener(new ActionListener()    
                                    {
                                        @Override
                                        public void actionPerformed(ActionEvent e)
                                        {
                                             languageButtonAction(jButton, e, mButton, hButton); //Japanese
                                        }
                                    });
        
        hButton.addActionListener(new ActionListener()    
                                    {
                                        @Override
                                        public void actionPerformed(ActionEvent e)
                                        {
                                            languageButtonAction(hButton, e, mButton, jButton); //Hokkien                                           
                                        }
                                    });
        
        mButton.addActionListener(new ActionListener()    
                                    {
                                        @Override
                                        public void actionPerformed(ActionEvent e)
                                        {                              
                                            languageButtonAction(mButton, e, hButton, jButton); //Mandarin
                                        }
                                    });  

        suggestionList.addMouseListener(new MouseAdapter()
                                        {
                                            @Override
                                            public void mouseReleased(MouseEvent e)
                                            {
                                                searchTextField.setText( suggestionList.getSelectedValue().toString() );  
                                            }
                                        });
        
        suggestionList.addMouseMotionListener(new MouseAdapter() 
                                                {
                                                    @Override
                                                    public void mouseMoved(MouseEvent e)
                                                    {
                                                        int index = suggestionList.locationToIndex( e.getPoint() ); // get the index of the word in the list where the pointer is pointing
                                                        
                                                        suggestionList.setSelectedIndex(index); 
                                                    }
                                                }); 
    }
    
    private class BackupListener implements ActionListener
    {
        @Override
        public void actionPerformed(ActionEvent e)
        {

            DateFormat dateFormat = new SimpleDateFormat("MMMM dd, yyyy");
            Calendar cal = Calendar.getInstance();
            String currentDate = dateFormat.format(cal.getTime());
            String backupScript = "mysqldump --routines -u root --password=10906657 --add-drop-database -B my_vocabulary -r \"my_vocabulary (" + currentDate + ").sql\"";

            Process runtimeProcess;
            File path = new File("C://Users//Aaron//Desktop");
            try
            {
                runtimeProcess = Runtime.getRuntime().exec(backupScript, null, path);
                int result = runtimeProcess.waitFor();
                
                if(result == 0)
                    JOptionPane.showMessageDialog(MainFrame.this, "Backup created successfully", "", JOptionPane.INFORMATION_MESSAGE);                    
            }
            catch (IOException ex)
            {
                JOptionPane.showMessageDialog(MainFrame.this, ex.getMessage(), "", JOptionPane.ERROR_MESSAGE);
            }
            catch (InterruptedException ex)
            {
                JOptionPane.showMessageDialog(MainFrame.this, ex.getMessage(), "", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JLabel background;
    private javax.swing.JButton backupButton;
    private javax.swing.JButton hButton;
    private javax.swing.JButton jButton;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton mButton;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JScrollPane suggestListScrollPane;
    private javax.swing.JList suggestionList;
    private javax.swing.JButton viewButton;
    // End of variables declaration//GEN-END:variables
}
